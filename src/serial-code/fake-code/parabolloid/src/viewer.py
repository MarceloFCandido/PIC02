#!/usr/bin/python2.7
#!-*- coding: utf8 -*-

import numpy as np;
import matplotlib.pyplot as plt;

'''
viewer.py
This script is responsable for generating an image that 
represents the parabolloid generated by solver.cpp. For doing 
this, it uses the matplotlib and numpy libraries. 
'''

# Loading data
A = np.fromfile('data/outputs/A.dat', dtype=float);
[x_points, x_ofst, xi, y_points, y_ofst, yi] = np.loadtxt('data/outputs/pmts.dat');

# Preparing data for plotting
X = np.linspace(xi, xi + x_points * x_ofst, num=int(x_points));
Y = np.linspace(yi, yi + y_points * y_ofst, num=int(y_points));
A = A.reshape(int(x_points), int(y_points));

[B, C] = np.meshgrid(X, Y)

# Preparing plot
fig, ax = plt.subplots();
CS = ax.contourf(B, C, A.transpose(), 20, cmap='RdGy');
ax.clabel(CS, inline=False, fontsize=10);
ax.set_title('z = 2x^2 + y^2');

ax.plot();
plt.savefig('data/images/A.png');
